name: Deploy to Oracle Cloud VPS

on:
  push:
    branches:
      - "main"

env:
  REGISTRY: ghcr.io
  CLIENT_IMAGE_NAME: ${{ github.repository }}/client
  SERVER_IMAGE_NAME: ${{ github.repository }}/server

jobs:
  build:
    name: Build and push docker images to ghcr
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create client .env file
        run: echo "${{ secrets.CLIENT_ENV_PROD }}" > ./client/.env

      - name: Create server .env file
        run: echo "${{ secrets.SERVER_ENV_PROD }}" > ./server/.env

      - name: Set up QEmu
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker login
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push the client image
        uses: docker/build-push-action@v5.0.0
        with:
          context: ./client
          file: ./client/Dockerfile
          build-args: |
            VITE_API_URL=${{ secrets.VITE_API_URL }}
          push: true
          tags: "${{ env.REGISTRY }}/${{ env.CLIENT_IMAGE_NAME }}"

      - name: Build and push the server image
        uses: docker/build-push-action@v5.0.0
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          tags: "${{ env.REGISTRY }}/${{ env.SERVER_IMAGE_NAME }}"

  deploy:
    name: Deploy to Oracle Cloud
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Fetch Code
        uses: actions/checkout@v4.1.1

      - name: Copy compose.yml to target server via SCP
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.SERVER_ADDRESS }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "./compose.yml"
          target: "~/deploy/${{ github.event.repository.name }}/"

      - name: Pull the latest docker images and start the compose services via SSH
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SERVER_ADDRESS }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd ~/deploy/${{ github.event.repository.name }}
            docker compose down
            docker compose pull
            docker compose up -d
